#  Copyright (c)2011 Core CG
#  All rights reserved
#  www.core-cg.com

# guard against multiple inclusions
$ifndef "MentalCore_Phenom_mi_included"
set "MentalCore_Phenom_mi_included" "true"

link "architectural.dll"
link "subsurface.dll"
link "paint.dll"
link "MentalCore.dll"
$include "architectural.mi"
$include "subsurface.mi"
$include "paint.mi"
$include "MentalCore.mi"

#######################
# Core Mia Phenomonon #
#######################

declare phenomenon
	color "core_mia_material" (
		#Base Parameters
		scalar		"cutout_opacity",	#: shortname "cop" default 1. min .0 max 1.			
		color		"incandesence",		#: shortname "inc" default .0 .0 .0
		shader		"subsurface",		#: shortname "sss"

		# Ambient
		scalar		"ambient_contrib",	#: shortname "abc" default 1. min .0 softmax 1.
		shader		"custom_amb_env",	#: shortname "cae"

		#Shading Parameters
		scalar  "diffuse_weight"      default 1.0, #: min 0.0 max 1.0
		color   "diffuse"             default 0.5 0.5 0.5,
		scalar  "diffuse_roughness"   default 0.0, #: min 0.0 max 1.0

		scalar  "reflectivity"        default 0.6, #: min 0.0 max 1.0
		color   "refl_color"          default 1.0 1.0 1.0,
		scalar  "refl_gloss"          default 1.0, #: min 0.0 max 1.0 softmin 0.15
		integer "refl_gloss_samples"  default 8,   #: min 0 softmax 128
		boolean "refl_interpolate"    default off,
		boolean "refl_hl_only"        default off,
		boolean "refl_is_metal"       default off,

		scalar  "transparency"        default 0.0, #: min 0.0 max 1.0
		color   "refr_color"          default 1.0 1.0 1.0,
		scalar  "refr_gloss"          default 1.0, #: min 0.0 max 1.0
		scalar  "refr_ior"            default 1.4, #: min 0.1 softmax 2.0
		integer "refr_gloss_samples"  default 8,   #: min 0 softmax 128
		boolean "refr_interpolate"    default off,
		boolean "refr_translucency"   default off,
		color   "refr_trans_color"    default 0.7 0.6 0.5,
		scalar  "refr_trans_weight"   default 0.5, #: min 0.0 max 1.0

		scalar  "anisotropy"          default 1.0, #: min 0.1 softmax 10
		scalar  "anisotropy_rotation" default 0.0, #: softmin 0 softmax 1
		integer "anisotropy_channel"  default -1,  #: min -4  softmax 64

		boolean "brdf_fresnel"         default off,
		scalar  "brdf_0_degree_refl"   default 0.2, #: min 0.0 max 1.0
		scalar  "brdf_90_degree_refl"  default 1.0, #: min 0.0 max 1.0
		scalar  "brdf_curve"           default 5.0, #: min 0.1 softmax 20
		boolean "brdf_conserve_energy" default on,

		# Interpolation settings
		integer "intr_grid_density"   default 2,    #: min 0 max 5 enum "2 (double):1 (same as rendering):1/2 (half resolution):1/3 (third resolution):1/4 (quarter resolution):1/5 (fifth resolution)"
		integer "intr_refl_samples"   default 2,    #: min 0 softmax 5
		boolean "intr_refl_ddist_on"  default off,
		scalar  "intr_refl_ddist"     default 0.0,
		integer "intr_refr_samples"   default 2,    #: min 0 softmax 5
		boolean "single_env_sample"   default off,

		# Reflection/Refraction optimizations & falloffs
		boolean  "refl_falloff_on"       default off,
		scalar   "refl_falloff_dist"     default 0.0,
		boolean  "refl_falloff_color_on" default off,
		color    "refl_falloff_color"    default 0 0 0,
		integer  "refl_depth"            default 5,    #: min 0 softmax 10
		scalar   "refl_cutoff"           default 0.01, #: min 0.0 max 1.0

		boolean  "refr_falloff_on"       default off,
		scalar   "refr_falloff_dist"     default 0.0,
		boolean  "refr_falloff_color_on" default off,
		color    "refr_falloff_color"    default 0 0 0,
		integer  "refr_depth"            default 5,    #: min -1 softmax 10
		scalar   "refr_cutoff"           default 0.01, #: min 0.0 max 1.0

		# Factors
		scalar   "indirect_multiplier"   default 1.0,  #: min 0 softmax 1.0
		scalar   "fg_quality"            default 1.0,  #: min 0 softmax 10.0
		scalar   "fg_quality_w"          default 1.0,  #: min 0 softmax 1.0

		# Options
		boolean  "thin_walled"            default off,
		boolean  "no_visible_area_hl"     default on,
		boolean  "skip_inside_refl"       default on,
		boolean  "do_refractive_caustics" default off,
		boolean  "backface_cull"          default off,
		boolean  "propagate_alpha"        default off,    

		# Other effects
		scalar   "hl_vs_refl_balance"     default 1.0,   #: min 0.0 softmax 1.0
		shader   "bump",
		boolean  "no_diffuse_bump"        default off,

		integer     "mode"                default 4,	#: property "lightmode"
		array light "lights",				#: property "lightlink"

		# Additional bump handling
		integer     "bump_mode"			  default 5, 
		vector      "overall_bump"        default 0 0 0,
		vector      "standard_bump"       default 0 0 0,
		shader		"normal_map",		#: shortname "nrm"

		# Occlusion
		boolean		"en_occlusion",		#: shortname "enao" default on
		integer		"ao_trans_mode",	#: shortname "aotm" default 0 min 0 max 2 enum "Use Global Defaults=0:Force Transpency On=1:Force Transpency Off=2"
		integer		"ao_trans_depth",	#: shortname "aotd" default 1 min 1 softmax 4
		integer		"ao_cache_points",	#: shortname "aocp" default 0
		scalar		"ambient_occ",		#: shortname "aao" default 1. min .0 max 1.
		scalar		"diffuse_occ",		#: shortname "dao" default 1. min .0 max 1.
		scalar		"specular_occ",		#: shortname "sao" default .0 min .0 max 1.
		scalar		"reflection_occ",	#: shortname "rao" default .0 min .0 max 1.
		scalar		"subsurface_occ",	#: shortname "ssao" default .5 min .0 max 1.
		scalar		"translucency_occ",	#: shortname "tao" default .5 min .0 max 1.

		boolean		"ao_enable_overrides",	#: shortname "eaor" default off
		scalar		"ao_override_spread",	#: shortname "aorsp" default 88. min .0 softmax 100.
		integer		"ao_override_samples",	#: shortname "aorsm" default 32 min 0 softmax 128
		scalar		"ao_override_distance",	#: shortname "aord" default 20. min 0 softmax 100
		color		"ao_override_colour",	#: shortname "aorc" default .0 .0 .0

		# Baked Channels
		boolean		"en_baked_beauty",		#: shortname "enbb" default off
		color		"baked_beauty",			#: shortname "bb" default .0 .0 .0
		boolean		"en_baked_occlusion",	#: shortname "enbo" default off
		color		"baked_occlusion",		#: shortname "boc" default .0 .0 .0

		# Bloom
		scalar		"bloom_scale",		#: shortname "bls" default 1. min .0 softmax 5.
		color		"bloom_tint",		#: shortname "blt" default 1. 1. 1.

		# Options
		integer		"output_override",	#: shortname "outo" default 0 min 0 max 3 enum "Normal=0:Primary Holdout=1:Matte=2:Holdout"

		# Colour Management
		boolean		"cm_diffuse",				#: shortname "cmdiff" default on
		boolean		"cm_incandesence",			#: shortname "cmincd" default on
		boolean		"cm_refl_color",			#: shortname "cmrflc" default on
		boolean		"cm_refl_falloff_color",	#: shortname "cmrflfc" default on
		boolean		"cm_refr_color",			#: shortname "cmrfrc" default on
		boolean		"cm_refr_falloff_color",	#: shortname "cmrfrfc" default on
		boolean		"cm_refr_trans_color",		#: shortname "cmrfrtc" default on
		boolean		"cm_baked_beauty",			#: shortname "cmbb" default on
		boolean		"cm_baked_occ"				#: shortname "cmbocc" default on
		)

	shader "diffuse_colprofile" "core_colourprofile" (
		"enable" = interface "cm_diffuse",
		"input" = interface "diffuse"
		)

	shader "refl_color_colprofile" "core_colourprofile" (
		"enable" = interface "cm_refl_color",
		"input" = interface "refl_color"
		)

	shader "refl_falloff_color_colprofile" "core_colourprofile" (
		"enable" = interface "cm_refl_falloff_color",
		"input" = interface "refl_falloff_color"
		)

	shader "refr_color_colprofile" "core_colourprofile" (
		"enable" = interface "cm_refr_color",
		"input" = interface "refr_color"
		)

	shader "refr_falloff_color_colprofile" "core_colourprofile" (
		"enable" = interface "cm_refr_falloff_color",
		"input" = interface "refr_falloff_color"
		)

	shader "refr_trans_color_colprofile" "core_colourprofile" (
		"enable" = interface "cm_refr_trans_color",
		"input" = interface "refr_trans_color"
		)

	shader "base_mia_x_mat" "mia_material_x" (
		"diffuse_weight" = interface "diffuse_weight",
		"diffuse" = "diffuse_colprofile",
		"diffuse_roughness" = interface "diffuse_roughness",

		"reflectivity" = interface "reflectivity",
		"refl_color" = "refl_color_colprofile",
		"refl_gloss" = interface "refl_gloss",
		"refl_gloss_samples" = interface "refl_gloss_samples",
		"refl_interpolate" = interface "refl_interpolate",
		"refl_hl_only" = interface "refl_hl_only",
		"refl_is_metal" = interface "refl_is_metal",

		"transparency" = interface "transparency",
		"refr_color" = "refr_color_colprofile",
		"refr_gloss" = interface "refr_gloss",
		"refr_ior" = interface "refr_ior",
		"refr_gloss_samples" = interface "refr_gloss_samples",
		"refr_interpolate" = interface "refr_interpolate",
		"refr_translucency" = interface "refr_translucency",
		"refr_trans_color" = "refr_trans_color_colprofile",
		"refr_trans_weight" = interface "refr_trans_weight",

		"anisotropy" = interface "anisotropy",
		"anisotropy_rotation" = interface "anisotropy_rotation",
		"anisotropy_channel" = interface "anisotropy_channel",

		"brdf_fresnel" = interface "brdf_fresnel",
		"brdf_0_degree_refl" = interface "brdf_0_degree_refl",
		"brdf_90_degree_refl" = interface "brdf_90_degree_refl",
		"brdf_curve" = interface "brdf_curve",
		"brdf_conserve_energy" = interface "brdf_conserve_energy",

		"intr_grid_density" = interface "intr_grid_density",
		"intr_refl_samples" = interface "intr_refl_samples",
		"intr_refl_ddist_on" = interface "intr_refl_ddist_on",
		"intr_refl_ddist" = interface "intr_refl_ddist",
		"intr_refr_samples" = interface "intr_refr_samples",
		"single_env_sample" = interface "single_env_sample",

		"refl_falloff_on" = interface "refl_falloff_on",
		"refl_falloff_dist" = interface "refl_falloff_dist",
		"refl_falloff_color_on" = interface "refl_falloff_color_on",
		"refl_falloff_color" = "refl_falloff_color_colprofile",
		"refl_depth" = interface "refl_depth",
		"refl_cutoff" = interface "refl_cutoff",

		"refr_falloff_on" = interface "refr_falloff_on",
		"refr_falloff_dist" = interface "refr_falloff_dist",
		"refr_falloff_color_on" = interface "refr_falloff_color_on",
		"refr_falloff_color" = "refr_falloff_color_colprofile",
		"refr_depth" = interface "refr_depth",
		"refr_cutoff" = interface "refr_cutoff",

		"indirect_multiplier" = interface "indirect_multiplier",
		"fg_quality" = interface "fg_quality",
		"fg_quality_w" = interface "fg_quality_w",

		"ao_on" off,
		"ao_samples" 0,
		"ao_distance" 0.,
		"ao_dark" 0.0 0.0 0.0 1.,
		"ao_ambient" 0. 0. 0. 1.,
		"ao_do_details" 1,

		"thin_walled" = interface "thin_walled",
		"no_visible_area_hl" = interface "no_visible_area_hl",
		"skip_inside_refl" = interface "skip_inside_refl",
		"do_refractive_caustics" = interface "do_refractive_caustics",
		"propagate_alpha" = interface "propagate_alpha",

		"hl_vs_refl_balance" = interface "hl_vs_refl_balance",
		"cutout_opacity" 1.,
		"additional_color" 0. 0. 0. 1.,
		"no_diffuse_bump" = interface "no_diffuse_bump",

		"mode" = interface "mode",
		"lights" = interface "lights",

		"bump_mode" = interface "bump_mode",
		"overall_bump" = interface "overall_bump",
		"standard_bump" = interface "standard_bump",
		"multiple_outputs" off
		)

	shader "diff_mia_x_mat" "mia_material_x" (
		"diffuse_weight" = interface "diffuse_weight",
		"diffuse" = "diffuse_colprofile",
		"diffuse_roughness" = interface "diffuse_roughness",

		"reflectivity" 0.,
		"indirect_multiplier" 0.,
		"ao_on" off,

		"no_diffuse_bump" = interface "no_diffuse_bump",

		"mode" = interface "mode",
		"lights" = interface "lights",

		"bump_mode" = interface "bump_mode",
		"overall_bump" = interface "overall_bump",
		"standard_bump" = interface "standard_bump",
		"multiple_outputs" off
		)

	shader "mc_mia_wrapper" "core_mia_wrapper" (
		#Mia Material
		"base_miax" "base_mia_x_mat",
		"diff_miax" "diff_mia_x_mat",

		#Base Parameters
		"cutout_opacity" = interface "cutout_opacity",
		"incandesence" = interface "incandesence",
		"subsurface" = interface "subsurface",

		#Normal Map
		"normal_map" = interface "normal_map",

		# Ambient
		"ambient_contrib" = interface "ambient_contrib",
		"custom_amb_env" = interface "custom_amb_env",

		# Occlusion
		"en_occlusion" = interface "en_occlusion",
		"ao_trans_mode" = interface "ao_trans_mode",
		"ao_trans_depth" = interface "ao_trans_depth",
		"ao_cache_points" = interface "ao_cache_points",
		"ambient_occ" = interface "ambient_occ",
		"diffuse_occ" = interface "diffuse_occ",
		"specular_occ" = interface "specular_occ",
		"reflection_occ" = interface "reflection_occ",
		"subsurface_occ" = interface "subsurface_occ",
		"translucency_occ" = interface "translucency_occ",

		"ao_enable_overrides" = interface "ao_enable_overrides",
		"ao_override_spread" = interface "ao_override_spread",
		"ao_override_samples" = interface "ao_override_samples",
		"ao_override_distance" = interface "ao_override_distance",
		"ao_override_colour" = interface "ao_override_colour",

		# Baked Channels
		"en_baked_beauty" = interface "en_baked_beauty",
		"baked_beauty" = interface "baked_beauty",
		"en_baked_occlusion" = interface "en_baked_occlusion",
		"baked_occlusion" = interface "baked_occlusion",

		# Light Bloom
		"bloom_scale" = interface "bloom_scale",
		"bloom_tint" = interface "bloom_tint",

		# Options
		"output_override" = interface "output_override",

		# Colour Management
		"cm_incandesence" = interface "cm_incandesence",
		"cm_baked_beauty" = interface "cm_baked_beauty",
		"cm_baked_occ" = interface "cm_baked_occ"
		)
	root = "mc_mia_wrapper"
	apply material, photon, shadow
	version 1
	#: nodeid 81912
end declare



#######################
# MentalCore Skin SSS #
#######################

declare phenomenon
	color "core_skin_sss" (
		color texture  "lightmap",
		integer        "samples"        default 64,
		color		  "overall_color"    default 1. 1. 1. 1.,
		color   "front_sss_color"       default 1 0.85 0.6 ,
		scalar  "front_sss_weight"      default 0.5 ,
		scalar  "front_sss_radius"      default 8,
		color   "mid_sss_color"         default .95 0.5 0.2,
		scalar  "mid_sss_weight"        default 0.4,
		scalar  "mid_sss_radius"        default 25,
		color   "back_sss_color"        default 0.7 0.1 0.1 ,
		scalar  "back_sss_weight"       default 0.5,
		scalar  "back_sss_radius"       default 25,
		scalar  "back_sss_depth"        default 25,

		scalar  "scale_conversion"      default 1.0,
		scalar  "falloff"               default 2.0,

		vector  "normalCamera"          default 0 0 0,

		boolean	"cm_overall_color"		default on,
		boolean	"cm_front_sss_color"	default on,
		boolean	"cm_mid_sss_color"		default on,
		boolean	"cm_back_sss_color"		default on
		)

	shader "bumpshader" "misss_set_normal" (
		"normal"          = interface "normalCamera",
		"space"           1,
		"add"             off
		)

	shader "overall_colprofile" "core_colourprofile" (
		"enable" = interface "cm_overall_color",
		"input" = interface "overall_color"
		)

	shader "front_colprofile" "core_colourprofile" (
		"enable" = interface "cm_front_sss_color",
		"input" = interface "front_sss_color"
		)

	shader "mid_colprofile" "core_colourprofile" (
		"enable" = interface "cm_mid_sss_color",
		"input" = interface "mid_sss_color"
		)

	shader "back_colprofile" "core_colourprofile" (
		"enable" = interface "cm_back_sss_color",
		"input" = interface "back_sss_color"
		)

	shader "shallowscatter" "misss_fast_shader_x" (
		"lightmap"                 = interface "lightmap",
		"depthmap"                 = interface "depthmap",
		"bump"                     "bumpshader",
		"diffuse_color"            = "overall_colprofile",
		"diffuse_weight"           0.,
		"front_sss_color"          = "front_colprofile",
		"front_sss_weight"         = interface "front_sss_weight",
		"front_sss_radius"         = interface "front_sss_radius",
		"back_sss_radius"          0,
		"back_sss_weight"          0,
		"screen_composit"          off,
		"scale_conversion"         = interface "scale_conversion",
		"falloff"                  = interface "falloff",
		"output_sss_only"		   on,
		"samples"                  = interface "samples"
		)

	shader "deepscatter" "misss_fast_shader_x" (
		"lightmap"                 = interface "lightmap",
		"depthmap"                 = interface "depthmap",
		"bump"                     "bumpshader",
		"diffuse_color"            = "overall_colprofile",
		"diffuse_weight"           0.,
		"screen_composit"          off,
		"front_sss_color"          = "mid_colprofile",
		"front_sss_weight"         = interface "mid_sss_weight",
		"front_sss_radius"         = interface "mid_sss_radius",
		"back_sss_color"           = "back_colprofile",
		"back_sss_weight"          = interface "back_sss_weight",
		"back_sss_radius"          = interface "back_sss_radius",
		"back_sss_depth"           = interface "back_sss_depth",
		"scale_conversion"         = interface "scale_conversion",
		"falloff"                  = interface "falloff",
		"output_sss_only"		   on,
		"samples"                  = interface "samples"
		)

	shader "mc_sss" "core_pass_sss" (
		"result"	= "shallowscatter.result",
		"result2"	= "deepscatter.result",
		"front"		= "shallowscatter.front_result",
		"mid"		= "deepscatter.front_result",
		"back"		= "deepscatter.back_result"
		)
	root = "mc_sss"
	version 1
	apply material
	#: nodeid 819100
end declare


#########################
# MentalCore Simple SSS #
#########################

declare phenomenon 
	color "core_simple_sss" (
		color texture "lightmap",
		integer       "samples"          default 64,
		color		  "overall_color"    default 1. 1. 1. 1.,
		color         "front_sss_color"  default 0.8 0.4 0.1,
		scalar        "front_sss_weight" default 0.5,
		scalar        "front_sss_radius" default 10,
		color         "back_sss_color"   default 0.8 0.4 0.1,
		scalar        "back_sss_weight"  default 0.5,
		scalar        "back_sss_radius"  default 10,
		scalar        "back_sss_depth"   default 10,

		scalar        "scale_conversion" default 1.0,
		scalar        "falloff"          default 2.0,
		vector        "normalCamera"     default 0 0 0,

		boolean		"cm_overall_color"		default on,
		boolean		"cm_front_sss_color"	default on,
		boolean		"cm_back_sss_color"		default on,
		)

	shader "overall_colprofile" "core_colourprofile" (
		"enable" = interface "cm_overall_color",
		"input" = interface "overall_color"
		)

	shader "front_colprofile" "core_colourprofile" (
		"enable" = interface "cm_front_sss_color",
		"input" = interface "front_sss_color"
		)

	shader "back_colprofile" "core_colourprofile" (
		"enable" = interface "cm_back_sss_color",
		"input" = interface "back_sss_color"
		)

	shader "bumpshader" "misss_set_normal" (
		"normal"          = interface "normalCamera",
		"space"           1,
		"add"             off
		)

	shader "mtlsh" "misss_fast_shader_x" (
		"lightmap"               = interface "lightmap",
		"depthmap"               = interface "depthmap",
		"bump"                   "bumpshader",
		"diffuse_color"          = "overall_colprofile",
		"diffuse_weight"         0.,
		"screen_composit"        off,
		"output_sss_only"		 on,
		"front_sss_color"        = "front_colprofile",
		"front_sss_weight"       = interface "front_sss_weight",
		"front_sss_radius"       = interface "front_sss_radius",
		"back_sss_color"         = "back_colprofile",
		"back_sss_weight"        = interface "back_sss_weight",
		"back_sss_radius"        = interface "back_sss_radius",
		"back_sss_depth"         = interface "back_sss_depth",
		"scale_conversion"       = interface "scale_conversion",
		"falloff"                = interface "falloff",
		"samples"                = interface "samples"
		)

	shader "mc_sss" "core_pass_sss" (
		"result"	= "mtlsh.result",
		"front"		= "mtlsh.front_result",
		"back"		= "mtlsh.back_result"
		)
	root = "mc_sss"
	version 1
	apply material
	#: nodeid 819101
end declare


########################
# MentalCore Car Paint #
########################

declare phenomenon
	color "core_carpaint" (
		#Base Parameters
		scalar		"cutout_opacity",	#: shortname "cop" default 1. min .0 max 1.			

		# Ambient
		scalar		"ambient_contrib",	#: shortname "abc" default 1. min .0 softmax 1.
		shader		"custom_amb_env",	#: shortname "cae"

		# Car Paint Attributes
		color		"base_color"      default 0.8 0.1 0,
		color		"edge_color"      default 0 0 0,
		scalar		"edge_color_bias" default 1.0,
		color		"lit_color"       default 0.6 0 0.2,
		scalar		"lit_color_bias"  default 8.0,
		scalar		"diffuse_weight"  default 1.0,
		scalar		"diffuse_bias"    default 1.5,

		color       "flake_color"    default 1 1 1,
		scalar      "flake_weight"   default 1.0,
		scalar      "flake_reflect"  default 0.0,
		scalar      "flake_exp"      default 45.0,
		scalar      "flake_density"  default  0.5,
		scalar      "flake_decay"    default  0.0,
		scalar      "flake_strength" default  0.8,
		scalar      "flake_scale"    default 0.12,

		color       "spec"            default 1 1 1,         
		scalar      "spec_weight"     default 0.2,      
		scalar      "spec_exp"        default 60.0,         
		color       "spec_sec"        default 1 1 1,
		scalar      "spec_sec_weight" default 0.3,  
		scalar      "spec_sec_exp"    default 25.0,     
		boolean     "spec_glazing"    default on,

		color       "reflection_color"       default 1 1 1,
		scalar      "edge_factor"            default 7.0,    
		scalar      "reflection_edge_weight" default 1.0,
		scalar      "reflection_base_weight" default 0.2,
		integer     "samples"                default 0,
		scalar      "glossy_spread"          default 0.0,
		scalar      "max_distance"           default 0.0,
		boolean     "single_env_sample"      default off,

		# Occlusion
		boolean		"en_occlusion",		#: shortname "enao" default on
		integer		"ao_trans_mode",	#: shortname "aotm" default 0 min 0 max 2 enum "Use Global Defaults=0:Force Transpency On=1:Force Transpency Off=2"
		integer		"ao_trans_depth",	#: shortname "aotd" default 1 min 1 softmax 4
		integer		"ao_cache_points",	#: shortname "aocp" default 0
		scalar		"ambient_occ",		#: shortname "aao" default 1. min .0 max 1.
		scalar		"diffuse_occ",		#: shortname "dao" default 1. min .0 max 1.
		scalar		"specular_occ",		#: shortname "sao" default .0 min .0 max 1.
		scalar		"reflection_occ",	#: shortname "rao" default .0 min .0 max 1.

		boolean		"ao_enable_overrides",	#: shortname "eaor" default off
		scalar		"ao_override_spread",	#: shortname "aorsp" default 88. min .0 softmax 100.
		integer		"ao_override_samples",	#: shortname "aorsm" default 32 min 0 softmax 128
		scalar		"ao_override_distance",	#: shortname "aord" default 20. min 0 softmax 100
		color		"ao_override_colour",	#: shortname "aorc" default .0 .0 .0

		# Indirect
		boolean		"en_indirect",		#: shortname "eni" default on
		color		"indirect_col",		#: shortname "indc" default 1. 1. 1.
		scalar		"indirect_sat",		#: shortname "inds" default 1. min .0 softmax 2.

		# Baked Channels
		boolean		"en_baked_beauty",		#: shortname "enbb" default off
		color		"baked_beauty",			#: shortname "bb" default .0 .0 .0
		boolean		"en_baked_occlusion",	#: shortname "enbo" default off
		color		"baked_occlusion",		#: shortname "boc" default .0 .0 .0

		# Bloom
		scalar		"bloom_scale",		#: shortname "bls" default 1. min .0 softmax 5.
		color		"bloom_tint",		#: shortname "blt" default 1. 1. 1.

		# Options
		integer		"output_override",	#: shortname "outo" default 0 min 0 max 3 enum "Normal=0:Primary Holdout=1:Matte=2:Holdout"

		# Colour Management
		boolean		"cm_base_color",			#: shortname "cmbc" default on
		boolean		"cm_edge_color",			#: shortname "cmec" default on
		boolean		"cm_lit_color",				#: shortname "cmlc" default on
		boolean		"cm_flake_color",			#: shortname "cmfc" default on
		boolean		"cm_spec",					#: shortname "cmsp1c" default on
		boolean		"cm_spec_sec",				#: shortname "cmsp2c" default on
		boolean		"cm_reflection_color",		#: shortname "cmrflc" default on
		boolean		"cm_indirect_col",			#: shortname "cmidc" default on
		boolean		"cm_baked_beauty",			#: shortname "cmbb" default on
		boolean		"cm_baked_occ",				#: shortname "cmbocc" default on

		# Light Linking
		integer     "mode"                default 4,	#: property "lightmode"
		array light "lights"				#: property "lightlink"
	)

	shader "baseColour_cp" "core_colourprofile" (
		"enable" = interface "cm_base_color",
		"input" = interface "base_color"
	)

	shader "edgeColour_cp" "core_colourprofile" (
		"enable" = interface "cm_edge_color",
		"input" = interface "edge_color"
		)

	shader "litColour_cp" "core_colourprofile" (
		"enable" = interface "cm_lit_color",
		"input" = interface "lit_color"
	)

	shader "spec1_cp" "core_colourprofile" (
		"enable" = interface "cm_spec",
		"input" = interface "spec"
	)

	shader "spec2_cp" "core_colourprofile" (
		"enable" = interface "cm_spec_sec",
		"input" = interface "spec_sec"
	)

	shader "flakeColour_cp" "core_colourprofile" (
		"enable" = interface "cm_flake_color",
		"input" = interface "flake_color"
	)

	shader "reflColour_cp" "core_colourprofile" (
		"enable" = interface "cm_reflection_color",
		"input" = interface "reflection_color"
	)

	shader "flakes"  "mi_bump_flakes" (
		"flake_scale"    = interface "flake_scale",
		"flake_strength" = interface "flake_strength",
		"flake_density"  = interface "flake_density"        
	)

	shader "base_paint" "mi_metallic_paint_x" (
		"ambient"		  0. 0. 0.,
		"base_color"     = "baseColour_cp",
		"edge_color"     = "edgeColour_cp",
		"edge_color_bias"= interface "edge_color_bias",
		"lit_color"      = "litColour_cp",
		"lit_color_bias" = interface "lit_color_bias",
		"diffuse_weight" = interface "diffuse_weight",
		"diffuse_bias"   = interface "diffuse_bias",

		"flake_color"    = "flakeColour_cp",
		"flake_weight"   = interface "flake_weight",
		"flake_exp"      = interface "flake_exp",
		"flake_reflect"  = interface "flake_reflect",
		"flake_decay"    = interface "flake_decay",
		"flake_bump"     "flakes",

		"spec"           = "spec1_cp",
		"spec_weight"    = interface "spec_weight",
		"spec_exp"       = interface "spec_exp",
		"spec_sec"       = "spec2_cp",
		"spec_sec_weight"= interface "spec_sec_weight",
		"spec_sec_exp"   = interface "spec_sec_exp",
		"spec_glazing"   = interface "spec_glazing",                     

		"irradiance_weight" 0.,
		"global_weight"     1.,

		"mode"           = interface "mode",
		"lights"         = interface "lights"
	)

	shader "diff_paint" "mi_metallic_paint_x" (
		"ambient"		 0. 0. 0.,
		"base_color"     1. 1. 1.,
		"edge_color"     1. 1. 1.,
		"edge_color_bias"= interface "edge_color_bias",
		"lit_color"      1. 1. 1.,
		"lit_color_bias" = interface "lit_color_bias",
		"diffuse_weight" = interface "diffuse_weight",
		"diffuse_bias"   = interface "diffuse_bias",

		"flake_color"    0. 0. 0.,
		"flake_weight"   0.,
		"flake_reflect"  0.,

		"spec"           0. 0. 0.,
		"spec_weight"    0.,
		"spec_sec"       0. 0. 00.,
		"spec_sec_weight" 0.,

		"irradiance_weight" 0.,
		"global_weight"     1.,

		"mode"           = interface "mode",
		"lights"         = interface "lights"
	)

	shader "refl_coat" "mib_glossy_reflection" (
		"reflection_color"  1 1 1,
		"environment_color" 1 1 1,
		"reflection_base_weight" = interface "reflection_base_weight",
		"reflection_edge_weight" = interface "reflection_edge_weight",
		"edge_factor"            = interface "edge_factor",
		"samples"           = interface "samples",
		"u_spread"          = interface "glossy_spread",
		"v_spread"          = interface "glossy_spread",
		"max_distance"      = interface "max_distance",
		"single_env_sample" = interface "single_env_sample"
	)

	shader "carpaint_wrapper" "core_carpaint_wrapper" (
		"diffuse_lvl" = "base_paint.diffuse_level",
		"diffuse_raw" = "base_paint.diffuse_raw",
		"diffuse_raw_no_shad" = "diff_paint.diffuse_raw",
		"ambient_lvl" = "base_paint.ambient_level",
		"spec1" = "base_paint.spec1_result",
		"spec2" = "base_paint.spec2_result",
		"spec_flake" = "base_paint.flake_result",
		"reflection" = "refl_coat",
		"flake_reflection" = "base_paint.flake_refl_result",

		"refl_color" = interface "reflection_color",

		"cutout_opacity" = interface "cutout_opacity",

		"ambient_contrib" = interface "ambient_contrib",
		"custom_amb_env" = interface "custom_amb_env",

		"en_occlusion" = interface "en_occlusion",
		"ao_trans_mode" = interface "ao_trans_mode",
		"ao_trans_depth" = interface "ao_trans_depth",
		"ao_cache_points" = interface "ao_cache_points",
		"ambient_occ" = interface "ambient_occ",
		"diffuse_occ" = interface "diffuse_occ",
		"specular_occ" = interface "specular_occ",
		"reflection_occ" = interface "reflection_occ",

		"ao_enable_overrides" = interface "ao_enable_overrides",
		"ao_override_spread" = interface "ao_override_spread",
		"ao_override_samples" = interface "ao_override_samples",
		"ao_override_distance" = interface "ao_override_distance",
		"ao_override_colour" = interface "ao_override_colour",

		"en_indirect" = interface "en_indirect",
		"indirect_col" = interface "indirect_col",
		"indirect_sat" = interface "indirect_sat",

		"en_baked_beauty" = interface "en_baked_beauty",
		"baked_beauty" = interface "baked_beauty",
		"en_baked_occlusion" = interface "en_baked_occlusion",
		"baked_occlusion" = interface "baked_occlusion",

		"bloom_scale" = interface "bloom_scale",
		"bloom_tint" = interface "bloom_tint",

		"output_override" = interface "output_override",

		"cm_indirect_col" = interface "cm_indirect_col",
		"cm_baked_beauty" = interface "cm_baked_beauty",
		"cm_baked_occ" = interface "cm_baked_occ"
	)

	root = "carpaint_wrapper"

	version 1
	apply material
	#: nodeid 819102
end declare


##########################
# MentalCore Car Paint 2 #
##########################

declare phenomenon
	color	#: shortname "outc"
	"core_carpaint2" (
		#Base Parameters
		scalar		"cutout_opacity",		#: shortname "cop" default 1. min .0 max 1.			

		# Ambient
		scalar		"ambient_contrib",		#: shortname "abc" default 1. min .0 softmax 1.
		shader		"custom_amb_env",		#: shortname "cae"

		# Car Paint Attributes
		color		"base_color",			#: shortname "bc" default 0.8 0.1 0
		color		"edge_color",			#: shortname "ec" default 0 0 0
		scalar		"edge_color_bias",		#: shortname "ecb" default 1.0
		color		"lit_color",			#: shortname "lc" default 0.6 0 0.2
		scalar		"lit_color_bias",		#: shortname "lcb" default 8.0
		scalar		"diffuse_weight",		#: shortname "dw" default 1.0
		scalar		"diffuse_bias",			#: shortname "db" default 1.5

		color       "flake_color",			#: shortname "fc" default 1 1 1
		scalar      "flake_weight",			#: shortname "fw" default 1.0
		scalar      "flake_reflect",		#: shortname "fr" default 0.0
		scalar      "flake_exp",			#: shortname "fe" default 45.0
		scalar      "flake_density",		#: shortname "fd" default 0.5
		scalar      "flake_decay",			#: shortname "fdc" default 0.0
		scalar      "flake_strength",		#: shortname "fs" default 0.8
		scalar      "flake_scale",			#: shortname "fsc" default 0.12

		color       "spec",					#: shortname "sp" default 1 1 1
		scalar      "spec_weight",			#: shortname "spw" default 0.2
		scalar      "spec_exp",				#: shortname "spe" default 60.0
		color       "spec_sec",				#: shortname "sps" default 1 1 1
		scalar      "spec_sec_weight",		#: shortname "spsw" default 0.3
		scalar      "spec_sec_exp",			#: shortname "spse" default 25.0
		boolean     "spec_glazing",			#: shortname "spg" default on

		color       "reflection_color",			#: shortname "rfc" default 1 1 1
		scalar      "edge_factor",				#: shortname "edf" default 7.0
		scalar      "reflection_edge_weight",	#: shortname "rfew" default 1.0
		scalar      "reflection_base_weight",	#: shortname "rfbw" default 0.2
		integer     "samples",					#: shortname "rfs" default 0
		scalar      "glossy_spread",			#: shortname "rfgs" default 0.0
		scalar      "max_distance",				#: shortname "rfmd" default 0.0
		boolean     "single_env_sample",		#: shortname "ses" default off
					 
		# Bump Attributes
		shader		"bump_map",				#: shortname "bmp"
		shader		"normal_map",			#: shortname "nrm"

		# Occlusion
		boolean		"en_occlusion",			#: shortname "enao" default on
		integer		"ao_trans_mode",		#: shortname "aotm" default 0 min 0 max 2 enum "Use Global Defaults=0:Force Transpency On=1:Force Transpency Off=2"
		integer		"ao_trans_depth",		#: shortname "aotd" default 1 min 1 softmax 4
		integer		"ao_cache_points",		#: shortname "aocp" default 0
		scalar		"ambient_occ",			#: shortname "aao" default 1. min .0 max 1.
		scalar		"diffuse_occ",			#: shortname "dao" default 1. min .0 max 1.
		scalar		"specular_occ",			#: shortname "sao" default .0 min .0 max 1.
		scalar		"reflection_occ",		#: shortname "rao" default .0 min .0 max 1.

		boolean		"ao_enable_overrides",	#: shortname "eaor" default off
		scalar		"ao_override_spread",	#: shortname "aorsp" default 88. min .0 softmax 100.
		integer		"ao_override_samples",	#: shortname "aorsm" default 32 min 0 softmax 128
		scalar		"ao_override_distance",	#: shortname "aord" default 20. min 0 softmax 100
		color		"ao_override_colour",	#: shortname "aorc" default .0 .0 .0

		# Indirect
		boolean		"en_indirect",			#: shortname "eni" default on
		color		"indirect_col",			#: shortname "indc" default 1. 1. 1.
		scalar		"indirect_sat",			#: shortname "inds" default 1. min .0 softmax 2.
						   
		# Baked Channels
		boolean		"en_baked_beauty",		#: shortname "enbb" default off
		color		"baked_beauty",			#: shortname "bb" default .0 .0 .0
		boolean		"en_baked_occlusion",	#: shortname "enbo" default off
		color		"baked_occlusion",		#: shortname "boc" default .0 .0 .0

		# Bloom
		scalar		"bloom_scale",			#: shortname "bls" default 1. min .0 softmax 5.
		color		"bloom_tint",			#: shortname "blt" default 1. 1. 1.

		# Options
		integer		"output_override",	#: shortname "outo" default 0 min 0 max 3 enum "Normal=0:Primary Holdout=1:Matte=2:Holdout"

		# Colour Management
		boolean		"cm_base_color",		#: shortname "cmbc" default on
		boolean		"cm_edge_color",		#: shortname "cmec" default on
		boolean		"cm_lit_color",			#: shortname "cmlc" default on
		boolean		"cm_flake_color",		#: shortname "cmfc" default on
		boolean		"cm_spec",				#: shortname "cmsp1c" default on
		boolean		"cm_spec_sec",			#: shortname "cmsp2c" default on
		boolean		"cm_reflection_color",	#: shortname "cmrflc" default on
		boolean		"cm_indirect_col",		#: shortname "cmidc" default on
		boolean		"cm_baked_beauty",		#: shortname "cmbb" default on
		boolean		"cm_baked_occ",			#: shortname "cmbocc" default on

		# Light Linking
		integer     "mode"       default 4,	#: property "lightmode"
		array light "lights"				#: property "lightlink"
	)

	shader "baseColour_cp" "core_colourprofile" (
		"enable" = interface "cm_base_color",
		"input" = interface "base_color"
	)

	shader "edgeColour_cp" "core_colourprofile" (
		"enable" = interface "cm_edge_color",
		"input" = interface "edge_color"
	)

	shader "litColour_cp" "core_colourprofile" (
		"enable" = interface "cm_lit_color",
		"input" = interface "lit_color"
	)

	shader "spec1_cp" "core_colourprofile" (
		"enable" = interface "cm_spec",
		"input" = interface "spec"
	)

	shader "spec2_cp" "core_colourprofile" (
		"enable" = interface "cm_spec_sec",
		"input" = interface "spec_sec"
	)

	shader "flakeColour_cp" "core_colourprofile" (
		"enable" = interface "cm_flake_color",
		"input" = interface "flake_color"
	)

	shader "reflColour_cp" "core_colourprofile" (
		"enable" = interface "cm_reflection_color",
		"input" = interface "reflection_color"
	)

	shader "flakes"  "mi_bump_flakes" (
		"flake_scale"    = interface "flake_scale",
		"flake_strength" = interface "flake_strength",
		"flake_density"  = interface "flake_density"        
	)

	shader "base_paint" "mi_metallic_paint_x" (
		"ambient"		  0. 0. 0.,
		"base_color"     = "baseColour_cp",
		"edge_color"     = "edgeColour_cp",
		"edge_color_bias"= interface "edge_color_bias",
		"lit_color"      = "litColour_cp",
		"lit_color_bias" = interface "lit_color_bias",
		"diffuse_weight" = interface "diffuse_weight",
		"diffuse_bias"   = interface "diffuse_bias",

		"flake_color"    = "flakeColour_cp",
		"flake_weight"   = interface "flake_weight",
		"flake_exp"      = interface "flake_exp",
		"flake_reflect"  = interface "flake_reflect",
		"flake_decay"    = interface "flake_decay",
		"flake_bump"     "flakes",

		"spec"           = "spec1_cp",
		"spec_weight"    = interface "spec_weight",
		"spec_exp"       = interface "spec_exp",
		"spec_sec"       = "spec2_cp",
		"spec_sec_weight"= interface "spec_sec_weight",
		"spec_sec_exp"   = interface "spec_sec_exp",
		"spec_glazing"   = interface "spec_glazing",                     

		"irradiance_weight" 0.,
		"global_weight"     1.,

		"mode"           = interface "mode",
		"lights"         = interface "lights"
	)

	shader "diff_paint" "mi_metallic_paint_x" (
		"ambient"		 0. 0. 0.,
		"base_color"     1. 1. 1.,
		"edge_color"     1. 1. 1.,
		"edge_color_bias"= interface "edge_color_bias",
		"lit_color"      1. 1. 1.,
		"lit_color_bias" = interface "lit_color_bias",
		"diffuse_weight" = interface "diffuse_weight",
		"diffuse_bias"   = interface "diffuse_bias",

		"flake_color"    0. 0. 0.,
		"flake_weight"   0.,
		"flake_reflect"  0.,

		"spec"           0. 0. 0.,
		"spec_weight"    0.,
		"spec_sec"       0. 0. 00.,
		"spec_sec_weight" 0.,

		"irradiance_weight" 0.,
		"global_weight"     1.,

		"mode"           = interface "mode",
		"lights"         = interface "lights"
	)

	shader "refl_coat" "mib_glossy_reflection" (
		"reflection_color"  1 1 1,
		"environment_color" 1 1 1,
		"reflection_base_weight" = interface "reflection_base_weight",
		"reflection_edge_weight" = interface "reflection_edge_weight",
		"edge_factor"            = interface "edge_factor",
		"samples"           = interface "samples",
		"u_spread"          = interface "glossy_spread",
		"v_spread"          = interface "glossy_spread",
		"max_distance"      = interface "max_distance",
		"single_env_sample" = interface "single_env_sample"
	)

	shader "carpaint_wrapper" "core_carpaint_wrapper" (
		"diffuse_lvl" = "base_paint.diffuse_level",
		"diffuse_raw" = "base_paint.diffuse_raw",
		"diffuse_raw_no_shad" = "diff_paint.diffuse_raw",
		"ambient_lvl" = "base_paint.ambient_level",
		"spec1" = "base_paint.spec1_result",
		"spec2" = "base_paint.spec2_result",
		"spec_flake" = "base_paint.flake_result",
		"reflection" = "refl_coat",
		"flake_reflection" = "base_paint.flake_refl_result",
													   
		"refl_color" = interface "reflection_color",
												   
		"cutout_opacity" = interface "cutout_opacity",
		"normal_map" = interface "normal_map",
		"bump_map" = interface "bump_map",

		"ambient_contrib" = interface "ambient_contrib",
		"custom_amb_env" = interface "custom_amb_env",

		"en_occlusion" = interface "en_occlusion",
		"ao_trans_mode" = interface "ao_trans_mode",
		"ao_trans_depth" = interface "ao_trans_depth",
		"ao_cache_points" = interface "ao_cache_points",
		"ambient_occ" = interface "ambient_occ",
		"diffuse_occ" = interface "diffuse_occ",
		"specular_occ" = interface "specular_occ",
		"reflection_occ" = interface "reflection_occ",

		"ao_enable_overrides" = interface "ao_enable_overrides",
		"ao_override_spread" = interface "ao_override_spread",
		"ao_override_samples" = interface "ao_override_samples",
		"ao_override_distance" = interface "ao_override_distance",
		"ao_override_colour" = interface "ao_override_colour",

		"en_indirect" = interface "en_indirect",
		"indirect_col" = interface "indirect_col",
		"indirect_sat" = interface "indirect_sat",

		"en_baked_beauty" = interface "en_baked_beauty",
		"baked_beauty" = interface "baked_beauty",
		"en_baked_occlusion" = interface "en_baked_occlusion",
		"baked_occlusion" = interface "baked_occlusion",

		"bloom_scale" = interface "bloom_scale",
		"bloom_tint" = interface "bloom_tint",

		"output_override" = interface "output_override",

		"cm_indirect_col" = interface "cm_indirect_col",
		"cm_baked_beauty" = interface "cm_baked_beauty",
		"cm_baked_occ" = interface "cm_baked_occ"
		)

	root = "carpaint_wrapper"

	version 1
	apply material
	#: nodeid 819048
end declare


########################
# MentalCore Env Light #
########################

declare phenomenon 
	color "core_env_light" (
		integer		"mode",				#: shortname "m" default 0 min 0 max 3 enum "Add:Replace:Scale:Tint"
		integer		"type",				#: shortname "ty" default 0 min 0 max 1 enum "Omni:Directional"
		integer		"affects",			#: shortname "af" default 0 min 0 max 1 enum "Ambient:Indirect"
							
		integer		"colour_mode",		#: shortname "cm" default 0 min 0 max 1 enum "As Colour:As Environment"
		integer		"colprofile",		#: shortname "cp" default 0 min 0 max 3 enum "Default Input Profile:Linear:sRGB:Rec. 709"
		color		"colour",			#: shortname "c" default 1. 1. 1.
		scalar		"intensity",		#: shortname "i" default 1. min 0. softmax 4.
		scalar		"dir_blend",		#: shortname "db" default 0. min 0. max 1.
		scalar		"dir_exp",			#: shortname "de" default 2. min 0. softmax 10.
		
		scalar		"env_blur",			#: shortname "eb" default 2.0 min 0.0 softmax 4.0	
		integer		"env_blur_res",		#: shortname "ebr" default 512 min 32
		scalar		"env_rot",			#: shortname "rt" default 0 softmin 0 softmax 360

		boolean		"falloff",			#: shortname "fo" default off
		boolean		"falloff_loc_vis",	#: shortname "flv" default on
		scalar		"falloff_start",	#: shortname "fst" default 0. min 0. softmax 100.
		scalar		"falloff_stop",		#: shortname "fsp" default 10. min 0. softmax 100.
		scalar		"falloff_speed",	#: shortname "fs" default 1. min 0. softmax 10.

		scalar		"ao_amount",		#: shortname "aoa" default 1. min 0. max 1.
		color		"ao_colour",		#: shortname "aoc" default 0. 0. 0.
		)

	shader "spherical_lookup" "core_spherical_lookup" (
		"colprofile"		= interface "colprofile",
		"tex"				= interface "colour",
		"gain"				1.0,
		"rot"				= interface "env_rot",
		"en_blur"			on,
		"blur_res"			= interface "env_blur_res",
		"blur"				= interface "env_blur",
		"quality"			3
		)

	shader "light_base" "core_env_light_base" (
		"mode"				= interface "mode",
		"type"				= interface "type",
		"affects"			= interface "affects",
		
		"colour_mode"		= interface "colour_mode",
		"colprofile"		= interface "colprofile",
		"colour"			= interface "colour",
		"intensity"			= interface "intensity",
		"dir_blend"			= interface "dir_blend",
		"dir_exp"			= interface "dir_exp",

		"falloff"			= interface "falloff",
		"falloff_loc_vis"	= interface "falloff_loc_vis",
		"falloff_start"		= interface "falloff_start",
		"falloff_stop"		= interface "falloff_stop",
		"falloff_speed"		= interface "falloff_speed",

		"ao_amount"			= interface "ao_amount",
		"ao_colour"			= interface "ao_colour",
											   
		"env"				"spherical_lookup"
		)
	root = "light_base"
	version 1
	apply light
	#: nodeid 819025
end declare


#######################
# MentalCore Lightmap #
#######################

declare phenomenon 
	struct {
		vector      "point",
		vector      "normal"
		}
	"core_fast_lmap" (
		color texture	"lightmap",
		boolean			"indirect"				default off,
		boolean			"envlight"				default off,
		
		scalar			"diffuse_intensity",	#: shortname "di" default 1. min .0 softmax 1.
		scalar			"indirect_intensity",	#: shortname "ii" default 1. min .0 softmax 1.
		scalar			"amb_intensity",		#: shortname "ai" default 1. min .0 softmax 1.

		color			"add",					#: shortname "a"
					  
		boolean			"ao",					#: shortname "ao" default off
		integer			"ao_samples",			#: shortname "aos" default 32 min 0
		scalar			"ao_distance",			#: shortname "aod" default 20. min .0 softmax 100.
		color			"ao_colour",			#: shortname "aoc"
					  
		scalar			"scatter_bias"			default 0,
		
		integer			"mode"					default 4, #: property "lightmode"
		array light		"lights"				#: property "lightlink"
		)

	shader "lm_sample" "core_sss_irradiance" (							  
		"indirect"				= interface "indirect",
		"envlight"				= interface "envlight",

		"diffuse_intensity"		= interface "diffuse_intensity",
		"indirect_intensity"	= interface "indirect_intensity",
		"amb_intensity"			= interface "amb_intensity",

		"add"					= interface "add",
											  
		"ao"					= interface "ao",
		"ao_samples"			= interface "ao_samples",
		"ao_distance"			= interface "ao_distance",
		"ao_colour"				= interface "ao_colour",
											  
		"mode"					= interface "mode",
		"lights"				= interface "lights"
		)

	shader "lm_write" "misss_lightmap_write" (
		"lightmap"               = interface "lightmap",
		"scatter_bias"           = interface "scatter_bias",
		"input"                    "lm_sample"
		)
	root = "lm_write"
	version 1
	apply lightmap
	#: nodeid 819030
end declare


##########################
# MentalCore Bump Flakes #
##########################

declare phenomenon
	color "core_bump_flakes" (
		scalar "flake_density",			#: shortname "fd" default 0.5
		scalar "flake_strength",		#: shortname "fst" default 0.8
		scalar "flake_scale"			#: shortname "fsc" default 0.2
		)
	
	shader "bump_flakes" "mi_bump_flakes" (
		"flake_density" = interface "flake_density",
		"flake_strength" = interface "flake_strength",
		"flake_scale" = interface "flake_scale"
		)

	shader "normaloutput" "core_normaloutput" (
		"input" "bump_flakes"
		)

	root = "normaloutput"
	version 1
	apply texture
	#: nodeid 819033
end declare


##########################
# MentalCore Simple SSS 2#
##########################

declare phenomenon 
	color "core_simple_sss2" (
		color texture "lightmap",
		integer       "samples"					default 64,
		color		  "overall_color"			default 1. 1. 1. 1.,
							  
		color         "front_sss_color"			default 0.8 0.4 0.1,
		scalar        "front_sss_weight"		default 0.5,
		vector        "front_sss_radius"		default 20 10 5,
		color         "front_sss_radius_mod"	default 1 1 1,
							  
		color         "back_sss_color"			default 0.8 0.4 0.1,
		scalar        "back_sss_weight"			default 0.5,
		vector        "back_sss_radius"			default 20 10 5,
		color         "back_sss_radius_mod"		default 1 1 1,
		scalar        "back_sss_depth",			# unassigned (zero) means "same as radius"
							  
		scalar        "sampling_radius_mult"	default 5.0,

		scalar        "scale_conversion"		default 1.0,
		vector        "normalCamera"			default 0 0 0,

		boolean		"cm_overall_color"			default on,
		boolean		"cm_front_sss_color"		default on,
		boolean		"cm_front_sss_radius_mod"	default on,
		boolean		"cm_back_sss_color"			default on,
		boolean		"cm_back_sss_radius_mod"	default on,
		)

	shader "overall_colprofile" "core_colourprofile" (
		"enable" = interface "cm_overall_color",
		"input" = interface "overall_color"
		)

	shader "front_colprofile" "core_colourprofile" (
		"enable" = interface "cm_front_sss_color",
		"input" = interface "front_sss_color"
		)

	shader "back_colprofile" "core_colourprofile" (
		"enable" = interface "cm_back_sss_color",
		"input" = interface "back_sss_color"
		)

	shader "front_radius_colprofile" "core_colourprofile" (
		"enable" = interface "cm_front_sss_radius_mod",
		"input" = interface "front_sss_radius_mod"
		)

	shader "back_radius_colprofile" "core_colourprofile" (
		"enable" = interface "cm_back_sss_radius_mod",
		"input" = interface "back_sss_radius_mod"
		)

	shader "bumpshader" "misss_set_normal" (
		"normal"          = interface "normalCamera",
		"space"           1,
		"add"             off
		)

	shader "mtlsh" "misss_fast_shader2_x" (
		"lightmap"               = interface "lightmap",
		"depthmap"               = interface "depthmap",
		"bump"                   "bumpshader",
		"diffuse_color"          = "overall_colprofile",
		"diffuse_weight"         0.,
		"screen_composit"        off,
		"output_sss_only"		 on,
		"front_sss_color"        = "front_colprofile",
		"front_sss_weight"       = interface "front_sss_weight",
		"front_sss_radius"       = interface "front_sss_radius",
		"front_sss_radius_mod"   = "front_radius_colprofile",						   
		"back_sss_color"         = "back_colprofile",
		"back_sss_weight"        = interface "back_sss_weight",
		"back_sss_radius"        = interface "back_sss_radius",
		"back_sss_radius_mod"    = "back_radius_colprofile",
		"back_sss_depth"         = interface "back_sss_depth",
		"sampling_radius_mult"	 = interface "sampling_radius_mult",
		"scale_conversion"       = interface "scale_conversion",
		"samples"                = interface "samples"
		)

	shader "mc_sss" "core_pass_sss" (
		"result"	= "mtlsh.result",
		"front"		= "mtlsh.front_result",
		"back"		= "mtlsh.back_result"
		)
	root = "mc_sss"
	version 1
	apply material
	#: nodeid 819034
end declare


#########################
# MentalCore Skin SSS 2 #
#########################

declare phenomenon
	color "core_skin_sss2" (
		color texture	"lightmap",
		integer			"samples"			default 64,
		color			"overall_color"		default 1. 1. 1. 1.,
						   
		color   "front_sss_color"			default 1 0.85 0.6,
		scalar  "front_sss_weight"			default 0.5 ,
		vector  "front_sss_radius"			default 16 8 4,
		color   "front_sss_radius_mod"		default 1 1 1,
						   
		color   "mid_sss_color"				default .95 0.5 0.2,
		scalar  "mid_sss_weight"			default 0.5,
		vector  "mid_sss_radius"			default 50 25 12.5,
		color   "mid_sss_radius_mod"		default 1 1 1,
						   
		color   "back_sss_color"			default 0.7 0.1 0.1 ,
		scalar  "back_sss_weight"			default 0.5,
		vector  "back_sss_radius"			default 50 25 12.5,
		color   "back_sss_radius_mod"		default 1 1 1,
		scalar  "back_sss_depth"			default 0,

		scalar  "sampling_radius_mult"		default 5.0,
						   
		scalar  "scale_conversion"			default 1.0,
		vector  "normalCamera"				default 0 0 0,

		boolean	"cm_overall_color"			default on,
		boolean	"cm_front_sss_color"		default on,
		boolean	"cm_front_sss_radius_mod"	default on,
		boolean	"cm_mid_sss_color"			default on,
		boolean	"cm_mid_sss_radius_mod"		default on,
		boolean	"cm_back_sss_color"			default on,
		boolean	"cm_back_sss_radius_mod"	default on,
		)

	shader "bumpshader" "misss_set_normal" (
		"normal"          = interface "normalCamera",
		"space"           1,
		"add"             off
		)

	shader "overall_colprofile" "core_colourprofile" (
		"enable" = interface "cm_overall_color",
		"input" = interface "overall_color"
		)

	shader "front_colprofile" "core_colourprofile" (
		"enable" = interface "cm_front_sss_color",
		"input" = interface "front_sss_color"
		)

	shader "mid_colprofile" "core_colourprofile" (
		"enable" = interface "cm_mid_sss_color",
		"input" = interface "mid_sss_color"
		)

	shader "back_colprofile" "core_colourprofile" (
		"enable" = interface "cm_back_sss_color",
		"input" = interface "back_sss_color"
		)

	shader "front_radius_colprofile" "core_colourprofile" (
		"enable" = interface "cm_front_sss_radius_mod",
		"input" = interface "front_sss_radius_mod"
		)

	shader "mid_radius_colprofile" "core_colourprofile" (
		"enable" = interface "cm_mid_sss_radius_mod",
		"input" = interface "mid_sss_radius_mod"
		)

	shader "back_radius_colprofile" "core_colourprofile" (
		"enable" = interface "cm_back_sss_radius_mod",
		"input" = interface "back_sss_radius_mod"
		)

	shader "shallowscatter" "misss_fast_shader_x" (
		"lightmap"                 = interface "lightmap",
		"depthmap"                 = interface "depthmap",
		"bump"                     "bumpshader",
		"diffuse_color"            = "overall_colprofile",
		"diffuse_weight"           0.,
		"front_sss_color"          = "front_colprofile",
		"front_sss_weight"         = interface "front_sss_weight",
		"front_sss_radius"         = interface "front_sss_radius",
		"front_sss_radius_mod"     = "front_radius_colprofile",
		"back_sss_weight"          0.0,
		"back_sss_radius"          0 0 0,
		"back_sss_depth"		   0,
		"screen_composit"          off,
		"scale_conversion"         = interface "scale_conversion",
		"sampling_radius_mult"     = interface "sampling_radius_mult",
		"output_sss_only"		   on,
		"samples"                  = interface "samples"
		)

	shader "deepscatter" "misss_fast_shader_x" (
		"lightmap"                 = interface "lightmap",
		"depthmap"                 = interface "depthmap",
		"bump"                     "bumpshader",
		"diffuse_color"            = "overall_colprofile",
		"diffuse_weight"           0.,
		"screen_composit"          off,
		"front_sss_color"          = "mid_colprofile",
		"front_sss_weight"         = interface "mid_sss_weight",
		"front_sss_radius"         = interface "mid_sss_radius",
		"front_sss_radius_mod"     = "mid_radius_colprofile",
		"back_sss_color"           = "back_colprofile",
		"back_sss_weight"          = interface "back_sss_weight",
		"back_sss_radius"          = interface "back_sss_radius",
		"back_sss_radius_mod"      = "back_radius_colprofile",
		"back_sss_depth"           = interface "back_sss_depth",
		"scale_conversion"         = interface "scale_conversion",
		"sampling_radius_mult"     = interface "sampling_radius_mult",
		"output_sss_only"		   on,
		"samples"                  = interface "samples"
		)

	shader "mc_sss" "core_pass_sss" (
		"result"			= "shallowscatter.result",
		"result2"			= "deepscatter.result",
		"front"				= "shallowscatter.front_result",
		"mid"				= "deepscatter.front_result",
		"back"				= "deepscatter.back_result"
		)
	root = "mc_sss"
	version 1
	apply material
	#: nodeid 819035
end declare


##############################
# MentalCore SSS Color Bleed #
##############################

declare phenomenon 
    color "core_sss_color_bleed" (
		color texture	"lightmap",
		integer			"samples"        	default 64,
		color			"overall_color"    	default 1. 1. 1. 1.,
	
		color   "fine_scatter_color" 		default 0.192 0.294 0.313,
		color   "fine_scatter_color_mod" 	default 1.0 1.0 1.0,
        scalar  "fine_scatter_weight" 		default 1.5 ,
        scalar  "fine_scatter_radius" 		default 2.8,
		
		color   "mid_scatter_color" 		default 0.098 0.125 0,
		color   "mid_scatter_color_mod" 	default 1.0 1.0 1.0,
		scalar  "mid_scatter_weight" 		default 1.5, 
		scalar  "mid_scatter_radius" 		default 7.5,
		
		color   "wide_scatter_color" 		default 0.298 0.004 0,
		color   "wide_scatter_color_mod" 	default 1.0 1.0 1.0,
		scalar  "wide_scatter_weight" 		default 1.5,
		scalar  "wide_scatter_radius" 		default 14.0,
		
		color   "back_scatter_color" 		default 1.0 0 0,
		color   "back_scatter_color_mod" 	default 1.0 1.0 1.0,
		scalar  "back_scatter_weight" 		default 0.5,
		scalar  "back_scatter_radius" 		default 7.0,
		scalar  "back_scatter_depth" 		default 15.0,
		
		scalar  "scale_conversion"      	default 1.0,
		scalar  "falloff"               	default 2.0,

		vector  "normalCamera"          	default 0 0 0,
        
		boolean	"cm_overall_color"				default 1,
		boolean	"cm_fine_scatter_color"			default 1,
		boolean	"cm_fine_scatter_color_mod"		default 1,
		boolean	"cm_mid_scatter_color"			default 1,
		boolean	"cm_mid_scatter_color_mod"		default 1,
		boolean	"cm_wide_scatter_color"			default 1,
		boolean	"cm_wide_scatter_color_mod"		default 1,
		boolean	"cm_back_scatter_color"			default 1,
		boolean	"cm_back_scatter_color_mod"		default 1
    )
	
	shader "bumpshader" "misss_set_normal" (
		"normal"		= interface "normalCamera",
		"space"			1,
		"add"			off
		)

	shader "overall_colprofile" "core_colourprofile" (
		"enable" 		= interface "cm_overall_color",
		"input" 		= interface "overall_color"
		)
		
	shader "fine_colprofile" "core_colourprofile" (
		"enable" 		= interface "cm_fine_scatter_color",
		"input" 		= interface "fine_scatter_color"
		)
		
	shader "fine_mod_colprofile" "core_colourprofile" (
		"enable" 		= interface "cm_fine_scatter_color_mod",
		"input" 		= interface "fine_scatter_color_mod"
		)

	shader "mid_colprofile" "core_colourprofile" (
		"enable" 		= interface "cm_mid_scatter_color",
		"input" 		= interface "mid_scatter_color"
		)
		
	shader "mid_mod_colprofile" "core_colourprofile" (
		"enable" 		= interface "cm_mid_scatter_color_mod",
		"input" 		= interface "mid_scatter_color_mod"
		)
		
	shader "wide_colprofile" "core_colourprofile" (
		"enable" 		= interface "cm_wide_scatter_color",
		"input" 		= interface "wide_scatter_color"
		)
		
	shader "wide_mod_colprofile" "core_colourprofile" (
		"enable" 		= interface "cm_wide_scatter_color_mod",
		"input" 		= interface "wide_scatter_color_mod"
		)
		
	shader "back_colprofile" "core_colourprofile" (
		"enable" 		= interface "cm_back_scatter_color",
		"input" 		= interface "back_scatter_color"
		)
		
	shader "back_mod_colprofile" "core_colourprofile" (
		"enable" 		= interface "cm_back_scatter_color_mod",
		"input" 		= interface "back_scatter_color_mod"
		)
		
	shader "fine_color_mix" "core_texture_merge" (
		"operation" 		2,
		"input_a" 			= "fine_mod_colprofile",
		"input_b" 			= "fine_colprofile",
		"gain" 				1.,
		"black_clamp" 		on,
		"white_clamp" 		off,
		"en_mask" 			off,
		"mask" 				0.,
		"rev_mask" 			off,
		"mix" 				1.
		)
		
	shader "mid_color_mix" "core_texture_merge" (
		"operation" 		2,
		"input_a" 			= "mid_mod_colprofile",
		"input_b" 			= "mid_colprofile",
		"gain" 				1.,
		"black_clamp" 		on,
		"white_clamp" 		off,
		"en_mask" 			off,
		"mask" 				0.,
		"rev_mask" 			off,
		"mix" 				1.
		)
		
	shader "wide_color_mix" "core_texture_merge" (
		"operation" 		2,
		"input_a" 			= "wide_mod_colprofile",
		"input_b" 			= "wide_colprofile",
		"gain" 				1.,
		"black_clamp" 		on,
		"white_clamp" 		off,
		"en_mask" 			off,
		"mask" 				0.,
		"rev_mask" 			off,
		"mix" 				1.
		)
		
	shader "back_color_mix" "core_texture_merge" (
		"operation" 		2,
		"input_a" 			= "back_mod_colprofile",
		"input_b" 			= "back_colprofile",
		"gain" 				1.,
		"black_clamp" 		on,
		"white_clamp" 		off,
		"en_mask" 			off,
		"mask" 				0.,
		"rev_mask" 			off,
		"mix" 				1.
		)
			
	shader "scatter_contrib_a" "misss_fast_shader_x" (
		"lightmap"				= interface "lightmap",
		"depthmap"				= interface "depthmap",
		"bump"					"bumpshader",
		"diffuse_color"			= "overall_colprofile",
		"diffuse_weight"		0.,
		"screen_composit"		off,
		"output_sss_only"		on,
		"front_sss_color"		= "fine_color_mix.outColor",
		"front_sss_weight"		= interface "fine_scatter_weight",
		"front_sss_radius"		= interface "fine_scatter_radius",
		"back_sss_radius"		0,
        "back_sss_weight"		0,
		"back_sss_depth"		0,
		"scale_conversion"		= interface "scale_conversion",
		"falloff"				= interface "falloff",
		"samples"				= interface "samples"
		)
		
	shader "scatter_contrib_b" "misss_fast_shader_x" (
		"lightmap"				= interface "lightmap",
		"depthmap"				= interface "depthmap",
		"bump"					"bumpshader",
		"diffuse_color"			= "overall_colprofile",
		"diffuse_weight"		0.,
		"screen_composit"		off,
		"output_sss_only"		on,
		"front_sss_color"		= "mid_color_mix.outColor",
		"front_sss_weight"		= interface "mid_scatter_weight",
		"front_sss_radius"		= interface "mid_scatter_radius",
		"back_sss_radius"		0,
        "back_sss_weight"		0,
		"back_sss_depth"		0,
		"scale_conversion"		= interface "scale_conversion",
		"falloff"				= interface "falloff",
		"samples"				= interface "samples"
		)
		
	shader "scatter_contrib_c" "misss_fast_shader_x" (
		"lightmap"				= interface "lightmap",
		"depthmap"				= interface "depthmap",
		"bump"					"bumpshader",
		"diffuse_color"			= "overall_colprofile",
		"diffuse_weight"		0.,
		"screen_composit"		off,
		"output_sss_only"		on,
		"front_sss_color"		= "wide_color_mix.outColor",
		"front_sss_weight"		= interface "wide_scatter_weight",
		"front_sss_radius"		= interface "wide_scatter_radius",
		"back_sss_color"		= "back_color_mix.outColor",
        "back_sss_radius"		= interface "back_scatter_radius",
        "back_sss_weight"		= interface "back_scatter_weight",
		"back_sss_depth"		= interface "back_scatter_depth",
		"scale_conversion"		= interface "scale_conversion",
		"falloff"				= interface "falloff",
		"samples"				= interface "samples"
		)
		
	shader "scatter_ab_result" "core_texture_merge" (
		"operation"			6,
		"input_a"			= "scatter_contrib_a.result",
		"input_b"			= "scatter_contrib_b.result",
		"gain" 				1.,
		"black_clamp" 		on,
		"white_clamp" 		off,
		"en_mask" 			off,
		"mask" 				0.,
		"rev_mask" 			off,
		"mix" 				1.
		)
		
	shader "scatter_front_result" "core_texture_merge" (
		"operation"		6,
		"input_a"		= "scatter_contrib_c.front_result",
		"input_b"		= "scatter_ab_result.outColor",
		"gain" 			1.,
		"black_clamp" 	on,
		"white_clamp" 	off,
		"en_mask" 		off,
		"mask" 			0.,
		"rev_mask" 		off,
		"mix" 			1.
		)

	shader "mc_sss" "core_pass_sss" (
		"result"	= "scatter_front_result.outColor",
		"result2"	= "scatter_contrib_c.back_result",
		"front"		= "scatter_front_result.outColor",
		"back"		= "scatter_contrib_c.back_result"
		)
    
    root = "mc_sss"
	version 1
	apply material
	#: nodeid 819037
end declare

$endif # if not "MentalCore_Phenom_mi_included"
