//调用语句
//source"C:\\Documents and Settings\\sunwang\\Desktop\\radialDeformer\\radialDeformer\\radialDeformerMelScript\\radialSkinUI.mel";addRadialSkinUI;
//source"C:\\Documents and Settings\\sunwang\\Desktop\\radialDeformer\\radialDeformer\\radialDeformerMelScript\\radialSkinUI.mel";removeRadialSkinUI;
//////////////////////

source "\\\\10.50.8.2\\p\\script\\maya\\support\\maya\\huanqiu_scripts\\radialDeformerPaintDisplay.mel";
source "\\\\10.50.8.2\\p\\script\\maya\\support\\maya\\huanqiu_scripts\\radialSkinDeformerPaintDisplay.mel";

global proc removeRadialSkinUI()
{
if(`menu -exists radialSkin`)
{
deleteUI radialSkin;
};
};
global proc addRadialSkinUI()
{
/////////////////////////
if(`menu -exists radialSkin`)
{
deleteUI radialSkin;
}
menu -label "radialSkin" 
-tearOff true 
-parent MayaWindow 
-allowOptionBoxes true
radialSkin;
setParent -menu radialSkin;
////////////////////


//0///////////////////
menuItem 
-parent radialSkin
-label "createRadialSkinDeformerHandle"
-tearOff true
-annotation "创建radialSkinDeformerHandle,用于控制radialSkinDeformer的手柄" 
-command "edp_createRadialSkinDeformerHandle()";
/////////////////////

//0op///////////////////
//menuItem 
//-parent radialSkin
//-label "createRadialSkinDeformerHandle OptionBox"
//-tearOff true
//-optionBox true 
//-command "edo_createRadialSkinDeformerHandleOptionBoxUI()";
/////////////////////

//1///////////////////
menuItem 
-parent radialSkin
-label "bind RadialSkin"
-tearOff true
-annotation "选择所有radialSkinDeformerHandle和要进行绑定的mesh执行此命令后将生成radialSkinDeformer" 
-command "edo_radialBindSkin(0.0,0.0)";
/////////////////////

//1op///////////////////
menuItem 
-parent radialSkin
-label "bind RadialSkin OptionBox"
-tearOff true
-optionBox true 
-command "edo_radialBindSkinOptionBoxUI()";
/////////////////////

//2///////////////////
menuItem 
-parent radialSkin
-label "add RadialSkinInfluence"
-tearOff true
-annotation "选择所有radialSkinDeformerHandle和要进行添加控制手柄（影响体）的mesh执行此命令后会将所选择的手柄加入到该mesh的radialSkinDeformer中控制其变形" 
-command "edo_addRadialSkinInfluence(0.0,0.0)";
/////////////////////

//2op///////////////////
menuItem 
-parent radialSkin
-label "add RadialSkinInfluence OptionBox"
-tearOff true
-optionBox true 
-command "edo_addRadialSkinInfluenceOptionBoxUI()";
/////////////////////

//3////////////////
menuItem 
-parent radialSkin
-label "paintRadialSkinDeformer"
-tearOff true
-command "radialSkinDeformerPaintDisplay()";
///////////////////

//4///////////////////
menuItem 
-parent radialSkin
-label "radialDeformer"
-tearOff true
-annotation "选择要变形的mesh节点执行此命令将生成radialDeformer变形历史和相应的控制手柄" 
-command "edo_createRadialDeformer(0)";
/////////////////////

//4op///////////////////
menuItem 
-parent radialSkin
-label "radialDeformer OptionBox"
-tearOff true
-optionBox true 
-command "edo_radialDeformerOptionBoxUI()";
/////////////////////

//5///////////////////
menuItem 
-parent radialSkin
-label "paint RadialDeformer Weight Tool"
-tearOff true
-annotation "选择要进行权重绘制的带radialDeformer历史节点的mesh执行此命令 " 
-command "radialDeformerPaintDisplay()";
/////////////////////
};

//button function and option UI

global proc string[] edp_createRadialSkinDeformerHandle()
{
string $dagPathNames[2];
clear $dagPathNames;
string $transform=`createNode "transform" -n "radianDeformerHandle1"`;
string $shapeName=substituteAllString($transform,"Handle","HandleShape");
createNode "radialSkinDeformerHandle" -n $shapeName -p $transform;
$dagPathNames[0]=$transform;
$dagPathNames[1]=$shapeName;
select -r $transform;
return $dagPathNames;
};


global proc edo_radialBindSkinOptionBoxUI()
{
if (`window -ex "edo_radialBindSkinOptionBoxUI"`)
{
deleteUI "edo_radialBindSkinOptionBoxUI";
};
window -t "edo_radialBindSkinOptionBoxUI" "edo_radialBindSkinOptionBoxUI";
columnLayout -columnAttach "both" 5 -rowSpacing 10 -columnWidth 280 "edo_radialBindSkinOptionBoxUIcolumnLayout";

floatSliderGrp -label "normalWeight" -field true -minValue -0 -maxValue 1 -fieldMinValue 0 -fieldMaxValue 1 -value 0 -cw3 80 50 120 "edo_radialBindSkinoptionintSliderGrp1";

floatSliderGrp -label "radialWeight" -field true -minValue -0 -maxValue 1 -fieldMinValue 0 -fieldMaxValue 1 -value 0 -cw3 80 50 120 "edo_radialBindSkinoptionintSliderGrp2";

button -l "apply" -c "float $nw=`floatSliderGrp -q -v \"edo_radialBindSkinoptionintSliderGrp1\"`;float $rw=`floatSliderGrp -q -v \"edo_radialBindSkinoptionintSliderGrp2\"`;edo_radialBindSkin($nw,$rw);" "edo_radialBindSkinOptionBoxUIbutton1";

window -e -wh 300 140 "edo_radialBindSkinOptionBoxUI";
showWindow "edo_radialBindSkinOptionBoxUI";
};


global proc int edo_radialBindSkin(float $nw,float $rw)
{
string $sels[]=`ls -dag -s -l -ni -sl`;
int $len=size($sels);
if ($len==0)
{
    confirmDialog -title "错误" -message "您并未选择任何物体，请先选择所有的radialSkinDeformerHandle再选在要绑定的所有mesh节点！"
     -button "好的" -defaultButton "好的"
     -cancelButton "好的" -dismissString "好的";
     return 0;
};
string $meshs[]=`ls -type "mesh" -l $sels`;
int $mlen=size($meshs);
if ($mlen==0)
{
    confirmDialog -title "错误" -message "请先选择所有的radialSkinDeformerHandle后选择要绑定的所有mesh节点！"
    -button "好的" -defaultButton "好的"
    -cancelButton "好的" -dismissString "好的";
    return 0;
};
//检查是否已经存在radialSkinDeformer
$i=0;
string $handles[]=`ls -type "radialSkinDeformerHandle" -l $sels`;;
$i=0;
for ($i=0;$i<$mlen;$i++)
{
string $mesh=$meshs[$i];
string $history[]=`listHistory -f  0 $mesh`;
string $radialSkinNodes[]=`ls -type "radialSkinDeformer"  $history`;
if (size($radialSkinNodes)==0)
{
select -clear;
select -r $handles;
radialSkin -dmn $mesh -drw $rw -dnw $nw;
}
else
{
warning(($mesh+" 已经有了一个radialSkinDeformer变形节点做输入，将不会再次生成，如果需要添加新的控制手柄请使用 主菜单--->radialSkin--->add RadialSkinInfluence 命令 "));
};
};
return 1;
};

global proc edo_addRadialSkinInfluenceOptionBoxUI()
{
if (`window -ex "edo_addRadialSkinInfluenceOptionBoxUI"`)
{
deleteUI "edo_addRadialSkinInfluenceOptionBoxUI";
};
window -t "edo_addRadialSkinInfluenceOptionBoxUI" "edo_addRadialSkinInfluenceOptionBoxUI";
columnLayout -columnAttach "both" 5 -rowSpacing 10 -columnWidth 280 "edo_addRadialSkinInfluenceOptionBoxUIcolumnLayout";

floatSliderGrp -label "normalWeight" -field true -minValue -0 -maxValue 1 -fieldMinValue 0 -fieldMaxValue 1 -value 0 -cw3 80 50 120 "edo_addRadialSkinInfluenceoptionintSliderGrp1";

floatSliderGrp -label "radialWeight" -field true -minValue -0 -maxValue 1 -fieldMinValue 0 -fieldMaxValue 1 -value 0 -cw3 80 50 120 "edo_addRadialSkinInfluenceoptionintSliderGrp2";

button -l "apply" -c "float $nw=`floatSliderGrp -q -v \"edo_addRadialSkinInfluenceoptionintSliderGrp1\"`;float $rw=`floatSliderGrp -q -v \"edo_addRadialSkinInfluenceoptionintSliderGrp2\"`;edo_addRadialSkinInfluence($nw,$rw);" "edo_addRadialSkinInfluenceOptionBoxUIbutton1";

window -e -wh 300 140 "edo_addRadialSkinInfluenceOptionBoxUI";
showWindow "edo_addRadialSkinInfluenceOptionBoxUI";
};

global proc int edo_addRadialSkinInfluence(float $nw,float $rw)
{
//float $nw=1.0;
//float $rw=1.0;
string $sels[]=`ls -dag -s -l -ni -sl`;
int $len=size($sels);
if ($len==0)
{
    confirmDialog -title "错误" -message "您并未选择任何物体，请先选择所有新增加的radialSkinDeformerHandle再选择所有要添加影响体的mesh节点！"
     -button "好的" -defaultButton "好的"
     -cancelButton "好的" -dismissString "好的";
     return 0;
};
string $meshs[]=`ls -type "mesh" -l $sels`;
int $mlen=size($meshs);
if ($mlen==0)
{
    confirmDialog -title "错误" -message "请先选择所有新增加的radialSkinDeformerHandle后选择所有要添加影响体的mesh节点！"
    -button "好的" -defaultButton "好的"
    -cancelButton "好的" -dismissString "好的";
    return 0;
};
string $infs[]=`ls -type "radialSkinDeformerHandle" -l $sels`;
int $ilen=size($infs);
if ($ilen==0)
{
    confirmDialog -title "错误" -message "请先选择所有新增加的radialSkinDeformerHandle后选择所有要添加影响体的mesh节点！"
    -button "好的" -defaultButton "好的"
    -cancelButton "好的" -dismissString "好的";
    return 0;
};
//检查是否已经存在radialSkinDeformer
$i=0;
string $handles[]=`ls -type "radialSkinDeformerHandle" -l $sels`;;
print $handles;
$i=0;
for ($i=0;$i<$mlen;$i++)
{
string $mesh=$meshs[$i];
string $history[]=`listHistory -f  0 $mesh`;
string $radialSkinNodes[]=`ls -type "radialSkinDeformer"  $history`;
if (size($radialSkinNodes)==1)
{
string $radialSkinNode=$radialSkinNodes[0];
int $j=0;
for ($j=0;$j<$ilen;$j++)
{
string $inf=$infs[$j];
radialSkin -add $inf -dnn $radialSkinNode -drw $rw -dnw $nw;
};
}
else
{
warning(($mesh+" 没有任何radialSkinDeformer节点作输入，无法添加影响体到其radialSkinDeformer节点，如果需要对此模型进行绑定请使用:主菜单--->radialSkin--->bind RadialSkin 命令 "));
};
};
return 1;
};



global proc edo_radialDeformerOptionBoxUI()
{
if (`window -ex "edo_radialDeformerOptionBoxUI"`)
{
deleteUI "edo_radialDeformerOptionBoxUI";
};
window -t "edo_radialDeformerOptionBoxUI" "edo_radialDeformerOptionBoxUI";
columnLayout -columnAttach "both" 5 -rowSpacing 10 -columnWidth 180 "edo_radialDeformerOptionBoxUIcolumnLayout";
optionMenu -label "deformSpace:" "edo_radialDeformerOptionBoxUIoptionMenu";
   menuItem -label "WorldSpace" "edo_radialDeformerOptionBoxUIoptionMenuItem1";
   menuItem -label "HandleSpace" "edo_radialDeformerOptionBoxUIoptionMenuItem2";
button -l "apply" -c "int $space=`optionMenu -q -sl \"edo_radialDeformerOptionBoxUIoptionMenu\"`;edo_createRadialDeformer($space-1);" "edo_radialDeformerOptionBoxUIbutton1";
window -e -wh 190 100 "edo_radialDeformerOptionBoxUI";
showWindow "edo_radialDeformerOptionBoxUI";
};

global proc string[] edo_createRadialDeformer(int $type)
{
string $dadialDeformers[]=`deformer -type "radialDeformer"`;
setAttr ($dadialDeformers[0]+".deformSpace") $type;
return $dadialDeformers;
};